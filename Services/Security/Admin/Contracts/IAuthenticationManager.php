<?php

namespace Services\Security\Admin\Contracts;

use Models\User;

interface IAuthenticationManager
{
    /**
     * Attempts to log in the current user with his email and password
     * @param string $email
     * @param string $password
     * @param bool $remember
     * @return bool
     */
    function Authenticate( string $email, string $password, bool $remember ) : bool;

    /**
     * Checks if the current user is logged in
     * @return bool
     */
    function IsAuthenticated() : bool;

    /**
     * Logs out the current user
     * @return void
     */
    function DeAuthenticate() : void;

    /**
     * Gets the current authenticated user
     * @return User
     */
    function CurrentUser() : User;

    /**
     * Creates and stores a token to be used in the password reset process.
     * @param User $user
     * @return string
     */
    public function PasswordResetToken( User $user ): string;

    /**
     * Checks if a token is generated by IAuthenticator and if it's within the acceptable timeframe.
     * @param string $token
     * @return bool
     */
    function ValidateResetToken( string $token ) : bool;

    /**
     * Sets a new password for a user if the supplied token is valid token obtained via reset password process.
     * @param string $token
     * @param string $password
     * @return bool
     */
    function ResetPasswordWithToken(string $token, string $password) : bool;

    /**
     * Gets the user object associated with a PasswordResetToken
     * @param string $token
     * @return User|null
     */
    function UserFromToken(string $token): ?User;
}